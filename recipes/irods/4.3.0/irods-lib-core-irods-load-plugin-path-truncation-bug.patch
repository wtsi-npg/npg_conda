diff --git a/lib/core/include/irods_load_plugin.hpp b/lib/core/include/irods_load_plugin.hpp
index 04acc1111..a5a76a09b 100644
--- a/lib/core/include/irods_load_plugin.hpp
+++ b/lib/core/include/irods_load_plugin.hpp
@@ -41,7 +41,6 @@ namespace irods
             if ( strlen( env.irodsPluginHome ) > 0 ) {
                 plugin_home = env.irodsPluginHome;
             }
-
         }
 
         if (plugin_home.empty()) {
@@ -166,9 +165,19 @@ namespace irods
             return ERROR( PLUGIN_ERROR_MISSING_SHARED_OBJECT, msg );
         }
 
+	// Defensively remove NUL from the constructed so_name
+	// string. We have observed a NUL appear between the directory
+	// and file name components of the so_name path when
+	// distributed as a Conda package.
+	//
+	// When c_str() is called on the offending string the result
+	// is truncated and dlopen() on the truncated path fails.
+	so_name.erase(remove(so_name.begin(), so_name.end(), '\0'), so_name.end());
+	
         // =-=-=-=-=-=-=-
         // try to open the shared object
         void*  handle  = dlopen( so_name.c_str(), RTLD_LAZY | RTLD_LOCAL );
+	
         if ( !handle ) {
             std::stringstream msg;
             msg << "failed to open shared object file [" << so_name
